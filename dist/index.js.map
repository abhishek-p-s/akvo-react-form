{"version":3,"file":"index.js","sources":["../src/fields/TypeOption.jsx","../src/fields/TypeMultipleOption.jsx","../src/fields/TypeDate.jsx","../src/fields/TypeCascade.jsx","../src/fields/TypeNumber.jsx","../src/fields/TypeInput.jsx","../src/fields/TypeText.jsx","../src/fields/support/Maps.jsx","../src/fields/TypeGeo.jsx","../src/index.js"],"sourcesContent":["import React from 'react'\nimport { Space, Form, Radio, Select } from 'antd'\n\nconst TypeOption = ({ option, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      {option.length < 3 ? (\n        <Radio.Group>\n          <Space direction='vertical'>\n            {option.map((o, io) => (\n              <Radio key={io} value={o.name}>\n                {o.name}\n              </Radio>\n            ))}\n          </Space>\n        </Radio.Group>\n      ) : (\n        <Select style={{ width: '100%' }}>\n          {option.map((o, io) => (\n            <Select.Option key={io} value={o.name}>\n              {o.name}\n            </Select.Option>\n          ))}\n        </Select>\n      )}\n    </Form.Item>\n  )\n}\n\nexport default TypeOption\n","import React from 'react'\nimport { Form, Select } from 'antd'\n\nconst TypeMultipleOption = ({ option, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Select mode='multiple' style={{ width: '100%' }}>\n        {option.map((o, io) => (\n          <Select.Option key={io} value={o.name}>\n            {o.name}\n          </Select.Option>\n        ))}\n      </Select>\n    </Form.Item>\n  )\n}\n\nexport default TypeMultipleOption\n","import React from 'react'\nimport { Form, DatePicker } from 'antd'\n\nconst TypeDate = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <DatePicker style={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeDate\n","import React from 'react'\nimport { Form, Cascader } from 'antd'\n\nconst TypeCascade = ({ cascade, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Cascader options={cascade} />\n    </Form.Item>\n  )\n}\n\nexport default TypeCascade\n","import React from 'react'\nimport { Form, InputNumber } from 'antd'\n\nconst TypeNumber = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <InputNumber style={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeNumber\n","import React from 'react'\nimport { Form, Input } from 'antd'\n\nconst TypeInput = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Input sytle={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeInput\n","import React from 'react'\nimport { Form } from 'antd'\nimport TextArea from 'antd/lib/input/TextArea'\n\nconst TypeText = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <TextArea row={4} />\n    </Form.Item>\n  )\n}\n\nexport default TypeText\n","import React, { useState, useRef, useMemo } from 'react'\nimport L from 'leaflet'\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  useMapEvents,\n  useMap\n} from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport { Row, Col, InputNumber } from 'antd'\n\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst defaultCenter = {\n  lat: 0,\n  lng: 0\n}\n\nconst DraggableMarker = ({ changePos, position }) => {\n  const markerRef = useRef(null)\n  const eventHandlers = useMemo(\n    () => ({\n      dragend() {\n        const marker = markerRef.current\n        if (marker != null) {\n          const newPos = marker.getLatLng()\n          changePos(newPos)\n        }\n      }\n    }),\n    []\n  )\n\n  useMapEvents({\n    click(e) {\n      const newPos = e.latlng\n      changePos(newPos)\n    }\n  })\n\n  if (!position?.lat && !position?.lng) {\n    return ''\n  }\n\n  return (\n    <Marker\n      eventHandlers={eventHandlers}\n      position={position}\n      ref={markerRef}\n      draggable\n    />\n  )\n}\n\nconst MapRef = ({ center }) => {\n  const map = useMap()\n  map.panTo(center)\n  return null\n}\n\nconst Maps = ({ form, id, setValue, center }) => {\n  const [position, setPosition] = useState({ lat: null, lng: null })\n\n  const changePos = (newPos) => {\n    setPosition(newPos)\n    if (newPos?.lat && newPos?.lng) {\n      form.setFieldsValue({ [id]: newPos })\n    }\n  }\n\n  const onChange = (cname, e) => {\n    changePos({ ...position, [cname]: parseFloat(e) })\n  }\n\n  return (\n    <div>\n      <Row justify='space-between' style={{ marginBottom: '10px' }}>\n        <Col span={12} style={{ paddingRight: '10px' }}>\n          <InputNumber\n            placeholder='Latitude'\n            style={{ width: '100%' }}\n            value={position?.lat || null}\n            min='-90'\n            max='90'\n            onChange={(e) => onChange('lat', e)}\n          />\n        </Col>\n        <Col span={12} style={{ paddingLeft: '10px' }}>\n          <InputNumber\n            placeholder='Longitude'\n            className='site-input-right'\n            style={{ width: '100%' }}\n            value={position?.lng || null}\n            min='-180'\n            max='180'\n            onChange={(e) => onChange('lng', e)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <MapContainer\n            zoom={13}\n            scrollWheelZoom={false}\n            style={{ height: '300px', width: '100%' }}\n          >\n            <MapRef\n              center={\n                position?.lat && position?.lng\n                  ? position\n                  : center || defaultCenter\n              }\n            />\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            />\n            <DraggableMarker\n              form={form}\n              id={id}\n              changePos={changePos}\n              position={position}\n            />\n          </MapContainer>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Maps\n","import React, { useState } from 'react'\nimport { Col, Form, Input } from 'antd'\nimport Maps from './support/Maps'\n\nconst TypeGeo = ({ id, form, name, keyform, required, rules, center }) => {\n  const [value, setValue] = useState(null)\n  return (\n    <Col>\n      <Form.Item\n        key={keyform}\n        name={id}\n        label={`${keyform + 1}. ${name}`}\n        rules={rules}\n        required={required}\n      >\n        <Input value={value} disabled hidden />\n      </Form.Item>\n      <Maps form={form} setValue={setValue} id={id} center={center} />\n    </Col>\n  )\n}\n\nexport default TypeGeo\n","import React from 'react'\nimport { Row, Col, Card, Button, Form } from 'antd'\nimport 'antd/dist/antd.css'\nimport './styles.module.css'\nimport TypeOption from './fields/TypeOption'\nimport TypeMultipleOption from './fields/TypeMultipleOption'\nimport TypeDate from './fields/TypeDate'\nimport TypeCascade from './fields/TypeCascade'\nimport TypeNumber from './fields/TypeNumber'\nimport TypeInput from './fields/TypeInput'\nimport TypeText from './fields/TypeText'\nimport TypeGeo from './fields/TypeGeo'\n\nconst mapRules = ({ name, rule, type }) => {\n  if (type === 'number') {\n    return [{ ...rule, type: 'number' }]\n  }\n  return [{}]\n}\n\nconst QuestionFields = ({ cascade, form, index, field }) => {\n  let rules = []\n  if (field?.required) {\n    rules = [\n      {\n        validator: (_, value) =>\n          value\n            ? Promise.resolve()\n            : Promise.reject(new Error(`${field.name} is required`))\n      }\n    ]\n  }\n  if (field?.rule) {\n    rules = [...rules, ...mapRules(field)]\n  }\n  switch (field.type) {\n    case 'option':\n      return <TypeOption keyform={index} rules={rules} {...field} />\n    case 'multiple_option':\n      return <TypeMultipleOption keyform={index} rules={rules} {...field} />\n    case 'cascade':\n      return (\n        <TypeCascade\n          keyform={index}\n          cascade={cascade[field.option]}\n          rules={rules}\n          {...field}\n        />\n      )\n    case 'date':\n      return <TypeDate keyform={index} rules={rules} {...field} />\n    case 'number':\n      return <TypeNumber keyform={index} rules={rules} {...field} />\n    case 'text':\n      return <TypeText keyform={index} rules={rules} {...field} />\n    case 'geo':\n      return <TypeGeo keyform={index} rules={rules} form={form} {...field} />\n    default:\n      return <TypeInput keyform={index} rules={rules} {...field} />\n  }\n}\n\nconst validateDependency = (dependency, value) => {\n  if (dependency?.options) {\n    return dependency.options.includes(value)\n  }\n  let valid = false\n  if (dependency?.min) {\n    valid = value >= dependency.min\n  }\n  if (dependency?.max) {\n    valid = value <= dependency.max\n  }\n  return valid\n}\n\nconst Question = ({ fields, cascade, form }) => {\n  return fields.map((field, key) => {\n    if (field?.dependency) {\n      return (\n        <Form.Item\n          key={key}\n          shouldUpdate={(prevValues, currentValues) => {\n            const update = field.dependency\n              .map((x) => prevValues[x.id] !== currentValues[x.id])\n              .filter((x) => x === true)\n            return update.length\n          }}\n        >\n          {({ getFieldValue }) => {\n            const unmatches = field.dependency\n              .map((x) => validateDependency(x, getFieldValue(x.id)))\n              .filter((x) => x === false)\n            return unmatches.length ? null : (\n              <QuestionFields\n                form={form}\n                index={key}\n                cascade={cascade}\n                field={field}\n              />\n            )\n          }}\n        </Form.Item>\n      )\n    }\n    return (\n      <QuestionFields\n        form={form}\n        key={key}\n        index={key}\n        cascade={cascade}\n        field={field}\n      />\n    )\n  })\n}\n\nexport const Webform = ({ forms, onChange, onFinish, style }) => {\n  const [form] = Form.useForm()\n  if (!forms?.question_group) {\n    return 'Error Format'\n  }\n\n  const onSubmit = (values) => {\n    if (onFinish) {\n      onFinish(values)\n    } else {\n      console.log(values)\n    }\n  }\n\n  const onValuesChange = (fr, value, values) => {\n    const all = fr.getFieldsError().length\n    const filled = Object.keys(values)\n      .map((k) => values[k])\n      .filter((x) => x).length\n    if (onChange) {\n      onChange({\n        current: value,\n        values: values,\n        progress: (filled / all) * 100\n      })\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      layout='vertical'\n      name={forms.name}\n      scrollToFirstError='true'\n      onValuesChange={(value, values) =>\n        setTimeout(() => {\n          onValuesChange(form, value, values)\n        }, 100)\n      }\n      onFinish={onSubmit}\n      style={style}\n    >\n      {forms?.question_group.map((g, key) => {\n        return (\n          <Card key={key} title={g.name || `Section ${key + 1}`}>\n            <Question fields={g.question} cascade={forms.cascade} form={form} />\n          </Card>\n        )\n      })}\n      <Row>\n        <Col span={24}>\n          <Card>\n            <Form.Item>\n              <Button type='primary' htmlType='submit'>\n                Submit\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n"],"names":["TypeOption","option","id","name","keyform","required","rules","React","Form","length","Radio","Space","map","o","io","Select","width","TypeMultipleOption","TypeDate","DatePicker","TypeCascade","cascade","Cascader","TypeNumber","InputNumber","TypeInput","Input","TypeText","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","defaultCenter","lat","lng","DraggableMarker","changePos","position","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","newPos","getLatLng","useMapEvents","click","e","latlng","MapRef","center","useMap","panTo","Maps","form","setValue","useState","setPosition","setFieldsValue","onChange","cname","parseFloat","Row","marginBottom","Col","paddingRight","paddingLeft","MapContainer","height","TileLayer","TypeGeo","value","mapRules","rule","type","QuestionFields","index","field","validator","_","Promise","resolve","reject","Error","validateDependency","dependency","includes","valid","min","max","Question","fields","key","prevValues","currentValues","update","x","filter","getFieldValue","unmatches","Webform","forms","onFinish","style","useForm","question_group","onSubmit","values","console","log","onValuesChange","fr","all","getFieldsError","filled","Object","keys","k","progress","setTimeout","g","Card","question","Button"],"mappings":"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"}
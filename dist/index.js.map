{"version":3,"file":"index.js","sources":["../src/custom/Maps.jsx","../src/index.js"],"sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\nimport L from 'leaflet'\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  useMapEvents,\n  useMap\n} from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport { Row, Col, InputNumber } from 'antd'\n\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst defaultCenter = {\n  lat: 0,\n  lng: 0\n}\n\nconst DraggableMarker = ({ changePos, position }) => {\n  const markerRef = useRef(null)\n  const eventHandlers = useMemo(\n    () => ({\n      dragend() {\n        const marker = markerRef.current\n        if (marker != null) {\n          const newPos = marker.getLatLng()\n          changePos(newPos)\n        }\n      }\n    }),\n    []\n  )\n\n  useMapEvents({\n    click(e) {\n      const newPos = e.latlng\n      changePos(newPos)\n    }\n  })\n\n  if (!position?.lat && !position?.lng) {\n    return ''\n  }\n\n  return (\n    <Marker\n      eventHandlers={eventHandlers}\n      position={position}\n      ref={markerRef}\n      draggable\n    />\n  )\n}\n\nconst MapRef = ({ center }) => {\n  const map = useMap()\n  map.panTo(center)\n  return null\n}\n\nconst Maps = ({ form, id, setValue, center }) => {\n  const [position, setPosition] = useState({ lat: null, lng: null })\n\n  const changePos = (newPos) => {\n    setPosition(newPos)\n    if (newPos?.lat && newPos?.lng) {\n      form.setFieldsValue({ [id]: newPos })\n    }\n  }\n\n  const onChange = (cname, e) => {\n    changePos({ ...position, [cname]: parseFloat(e) })\n  }\n\n  return (\n    <div>\n      <Row justify='space-between' style={{ marginBottom: '10px' }}>\n        <Col span={12} style={{ paddingRight: '10px' }}>\n          <InputNumber\n            placeholder='Latitude'\n            style={{ width: '100%' }}\n            value={position?.lat || null}\n            min='-90'\n            max='90'\n            onChange={(e) => onChange('lat', e)}\n          />\n        </Col>\n        <Col span={12} style={{ paddingLeft: '10px' }}>\n          <InputNumber\n            placeholder='Longitude'\n            className='site-input-right'\n            style={{ width: '100%' }}\n            value={position?.lng || null}\n            min='-180'\n            max='180'\n            onChange={(e) => onChange('lng', e)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <MapContainer\n            zoom={13}\n            scrollWheelZoom={false}\n            style={{ height: '300px', width: '100%' }}\n          >\n            <MapRef\n              center={\n                position?.lat && position?.lng\n                  ? position\n                  : center || defaultCenter\n              }\n            />\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            />\n            <DraggableMarker\n              form={form}\n              id={id}\n              changePos={changePos}\n              position={position}\n            />\n          </MapContainer>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Maps\n","import React, { useState } from 'react'\nimport {\n  Row,\n  Col,\n  Card,\n  Space,\n  Button,\n  Form,\n  Input,\n  InputNumber,\n  Radio,\n  Select,\n  DatePicker,\n  Cascader\n} from 'antd'\nimport TextArea from 'antd/lib/input/TextArea'\nimport 'antd/dist/antd.css'\nimport './styles.module.css'\nimport Maps from './custom/Maps'\n\nconst mapRules = ({ name, rule, type }) => {\n  if (type === 'number') {\n    return [{ ...rule, type: 'number' }]\n  }\n  return [{}]\n}\n\nconst Question = ({ fields, cascade, form }) => {\n  const [value, setValue] = useState(null)\n  return fields.map((f, key) => {\n    let rules = []\n    if (f?.required) {\n      rules = [\n        {\n          validator: (_, value) =>\n            value\n              ? Promise.resolve()\n              : Promise.reject(new Error(`${f.name} is required`))\n        }\n      ]\n    }\n    if (f.rule) {\n      rules = [...rules, ...mapRules(f)]\n    }\n    return (\n      <Form.Item\n        key={key}\n        name={f.id}\n        label={`${key + 1}. ${f.name}`}\n        rules={rules}\n        required={f?.required}\n      >\n        {f.type === 'option' ? (\n          f.option.length < 3 ? (\n            <Radio.Group>\n              <Space direction='vertical'>\n                {f.option.map((o, io) => (\n                  <Radio key={io} value={o.name}>\n                    {o.name}\n                  </Radio>\n                ))}\n              </Space>\n            </Radio.Group>\n          ) : (\n            <Select style={{ width: '100%' }}>\n              {f.option.map((o, io) => (\n                <Select.Option key={io} value={o.name}>\n                  {o.name}\n                </Select.Option>\n              ))}\n            </Select>\n          )\n        ) : f.type === 'multiple_option' ? (\n          <Select mode='multiple' style={{ width: '100%' }}>\n            {f.option.map((o, io) => (\n              <Select.Option key={io} value={o.name}>\n                {o.name}\n              </Select.Option>\n            ))}\n          </Select>\n        ) : f.type === 'cascade' ? (\n          <Cascader options={cascade[f.option]} />\n        ) : f.type === 'date' ? (\n          <DatePicker style={{ width: '100%' }} />\n        ) : f.type === 'number' ? (\n          <InputNumber style={{ width: '100%' }} />\n        ) : f.type === 'text' ? (\n          <TextArea row={4} />\n        ) : f.type === 'geo' ? (\n          <Col>\n            <Input value={value} disabled hidden />\n            <Maps\n              form={form}\n              setValue={setValue}\n              id={f.id}\n              center={f?.center}\n            />\n          </Col>\n        ) : (\n          <Input sytle={{ width: '100%' }} />\n        )}\n      </Form.Item>\n    )\n  })\n}\n\nexport const Webform = ({ forms, onChange, onFinish, style }) => {\n  const [form] = Form.useForm()\n  if (!forms?.question_group) {\n    return 'Error Format'\n  }\n\n  const onSubmit = (values) => {\n    if (onFinish) {\n      onFinish(values)\n    } else {\n      console.log(values)\n    }\n  }\n\n  const onValuesChange = (value) => {\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      layout='vertical'\n      name={forms.name}\n      onValuesChange={onValuesChange}\n      onFinish={onSubmit}\n      style={style}\n    >\n      {forms?.question_group.map((g, key) => {\n        return (\n          <Card key={key} title={g.name || `Section ${key + 1}`}>\n            <Question fields={g.question} cascade={forms.cascade} form={form} />\n          </Card>\n        )\n      })}\n      <Row>\n        <Col span={24}>\n          <Card>\n            <Form.Item>\n              <Button type='primary' htmlType='submit'>\n                Submit\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","defaultCenter","lat","lng","DraggableMarker","changePos","position","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","newPos","getLatLng","useMapEvents","click","e","latlng","React","MapRef","center","map","useMap","panTo","Maps","form","id","useState","setPosition","setFieldsValue","onChange","cname","parseFloat","Row","marginBottom","Col","paddingRight","InputNumber","width","paddingLeft","MapContainer","height","TileLayer","mapRules","rule","type","Question","fields","cascade","value","setValue","f","key","rules","required","validator","_","Promise","resolve","reject","Error","name","Form","option","length","Radio","Space","o","io","Select","Cascader","DatePicker","Input","Webform","forms","onFinish","style","useForm","question_group","onSubmit","values","console","log","onValuesChange","g","Card","question","Button"],"mappings":"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"}
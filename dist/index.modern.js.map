{"version":3,"file":"index.modern.js","sources":["../src/custom/Maps.jsx","../src/index.js"],"sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\nimport L from 'leaflet'\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport { Row, Col, Input } from 'antd'\n\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst defaultCenter = {\n  lat: 0,\n  lng: 0\n}\n\nconst DraggableMarker = ({ form, setValue, id, center }) => {\n  const [position, setPosition] = useState(center || defaultCenter)\n  const markerRef = useRef(null)\n  const eventHandlers = useMemo(\n    () => ({\n      dragend() {\n        const marker = markerRef.current\n        if (marker != null) {\n          const newPos = marker.getLatLng()\n          setPosition(newPos)\n          setValue(`${newPos.lat}, ${newPos.lng}`)\n          form.setFieldsValue({ [id]: `${newPos.lat}, ${newPos.lng}` })\n        }\n      }\n    }),\n    []\n  )\n\n  useMapEvents({\n    click(e) {\n      const newPos = e.latlng\n      setPosition(newPos)\n      setValue(`${newPos.lat}, ${newPos.lng}`)\n      form.setFieldsValue({ [id]: `${newPos.lat}, ${newPos.lng}` })\n    }\n  })\n\n  return (\n    <Marker\n      eventHandlers={eventHandlers}\n      position={position}\n      ref={markerRef}\n      draggable\n    />\n  )\n}\n\nconst Maps = ({ form, id, setValue, center }) => {\n  return (\n    <div>\n      <Row>\n        <Col span={24}>\n          <Input.Group compact>\n            <Input addonBefore='Latitude' style={{ width: '50%' }} />\n            <Input\n              className='site-input-right'\n              addonBefore='Longitude'\n              style={{ width: '50%' }}\n            />\n          </Input.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <MapContainer\n            center={center || defaultCenter}\n            zoom={13}\n            scrollWheelZoom={false}\n            style={{ height: '300px', width: '100%' }}\n          >\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            />\n            <DraggableMarker\n              form={form}\n              setValue={setValue}\n              id={id}\n              center={center}\n            />\n          </MapContainer>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Maps\n","import React, { useState } from 'react'\nimport {\n  Row,\n  Col,\n  Card,\n  Space,\n  Button,\n  Form,\n  Input,\n  InputNumber,\n  Radio,\n  Select,\n  DatePicker,\n  Cascader\n} from 'antd'\nimport TextArea from 'antd/lib/input/TextArea'\nimport 'antd/dist/antd.css'\nimport './styles.module.css'\nimport Maps from './custom/Maps'\n\nconst Question = ({ fields, cascade, form }) => {\n  const [value, setValue] = useState(null)\n  return fields.map((f, key) => (\n    <Form.Item\n      key={key}\n      name={f.id}\n      label={`${key + 1}. ${f.name}`}\n      rules={[{ required: true }]}\n    >\n      {f.type === 'option' ? (\n        f.option.length < 3 ? (\n          <Radio.Group>\n            <Space direction='vertical'>\n              {f.option.map((o, io) => (\n                <Radio key={io} value={o.name}>\n                  {o.name}\n                </Radio>\n              ))}\n            </Space>\n          </Radio.Group>\n        ) : (\n          <Select style={{ width: '100%' }}>\n            {f.option.map((o, io) => (\n              <Select.Option key={io} value={o.name}>\n                {o.name}\n              </Select.Option>\n            ))}\n          </Select>\n        )\n      ) : f.type === 'multiple_option' ? (\n        <Select mode='multiple' style={{ width: '100%' }}>\n          {f.option.map((o, io) => (\n            <Select.Option key={io} value={o.name}>\n              {o.name}\n            </Select.Option>\n          ))}\n        </Select>\n      ) : f.type === 'cascade' ? (\n        <Cascader options={cascade[f.option]} />\n      ) : f.type === 'date' ? (\n        <DatePicker style={{ width: '100%' }} />\n      ) : f.type === 'number' ? (\n        <InputNumber style={{ width: '100%' }} />\n      ) : f.type === 'text' ? (\n        <TextArea row={4} />\n      ) : f.type === 'geo' ? (\n        <Col>\n          <Input value={value} disabled hidden />\n          <Maps form={form} setValue={setValue} id={f.id} center={f?.center} />\n        </Col>\n      ) : (\n        <Input sytle={{ width: '100%' }} />\n      )}\n    </Form.Item>\n  ))\n}\n\nexport const Webform = ({ forms, onChange, onFinish, style }) => {\n  const [form] = Form.useForm()\n  if (!forms?.question_group) {\n    return 'Error Format'\n  }\n\n  const onSubmit = (values) => {\n    if (onFinish) {\n      onFinish(values)\n    } else {\n      console.log(values)\n    }\n  }\n\n  const onValuesChange = (value) => {\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      layout='vertical'\n      name={forms.name}\n      onValuesChange={onValuesChange}\n      onFinish={onSubmit}\n      style={style}\n    >\n      {forms?.question_group.map((g, key) => {\n        return (\n          <Card key={key} title={g.name || `Section ${key + 1}`}>\n            <Question fields={g.question} cascade={forms.cascade} form={form} />\n          </Card>\n        )\n      })}\n      <Row>\n        <Col span={24}>\n          <Card>\n            <Form.Item>\n              <Button type='primary' htmlType='submit'>\n                Submit\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","defaultCenter","lat","lng","DraggableMarker","form","setValue","id","center","position","setPosition","useState","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","newPos","getLatLng","setFieldsValue","useMapEvents","click","e","latlng","Maps","width","height","Question","fields","cascade","value","map","f","key","name","required","type","option","length","o","io","Webform","forms","onChange","onFinish","style","Form","useForm","question_group","onSubmit","values","console","log","onValuesChange","g","question"],"mappings":"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"}
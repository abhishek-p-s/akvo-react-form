{"version":3,"file":"index.modern.js","sources":["../src/support/Maps.jsx","../src/fields/TypeOption.jsx","../src/fields/TypeMultipleOption.jsx","../src/fields/TypeDate.jsx","../src/fields/TypeCascade.jsx","../src/fields/TypeNumber.jsx","../src/fields/TypeInput.jsx","../src/fields/TypeText.jsx","../src/index.js"],"sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\nimport L from 'leaflet'\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  useMapEvents,\n  useMap\n} from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport { Row, Col, InputNumber } from 'antd'\n\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst defaultCenter = {\n  lat: 0,\n  lng: 0\n}\n\nconst DraggableMarker = ({ changePos, position }) => {\n  const markerRef = useRef(null)\n  const eventHandlers = useMemo(\n    () => ({\n      dragend() {\n        const marker = markerRef.current\n        if (marker != null) {\n          const newPos = marker.getLatLng()\n          changePos(newPos)\n        }\n      }\n    }),\n    []\n  )\n\n  useMapEvents({\n    click(e) {\n      const newPos = e.latlng\n      changePos(newPos)\n    }\n  })\n\n  if (!position?.lat && !position?.lng) {\n    return ''\n  }\n\n  return (\n    <Marker\n      eventHandlers={eventHandlers}\n      position={position}\n      ref={markerRef}\n      draggable\n    />\n  )\n}\n\nconst MapRef = ({ center }) => {\n  const map = useMap()\n  map.panTo(center)\n  return null\n}\n\nconst Maps = ({ form, id, setValue, center }) => {\n  const [position, setPosition] = useState({ lat: null, lng: null })\n\n  const changePos = (newPos) => {\n    setPosition(newPos)\n    if (newPos?.lat && newPos?.lng) {\n      console.log(form)\n      form.setFieldsValue({ [id]: newPos })\n    }\n  }\n\n  const onChange = (cname, e) => {\n    changePos({ ...position, [cname]: parseFloat(e) })\n  }\n\n  return (\n    <div>\n      <Row justify='space-between' style={{ marginBottom: '10px' }}>\n        <Col span={12} style={{ paddingRight: '10px' }}>\n          <InputNumber\n            placeholder='Latitude'\n            style={{ width: '100%' }}\n            value={position?.lat || null}\n            min='-90'\n            max='90'\n            onChange={(e) => onChange('lat', e)}\n          />\n        </Col>\n        <Col span={12} style={{ paddingLeft: '10px' }}>\n          <InputNumber\n            placeholder='Longitude'\n            className='site-input-right'\n            style={{ width: '100%' }}\n            value={position?.lng || null}\n            min='-180'\n            max='180'\n            onChange={(e) => onChange('lng', e)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <MapContainer\n            zoom={13}\n            scrollWheelZoom={false}\n            style={{ height: '300px', width: '100%' }}\n          >\n            <MapRef\n              center={\n                position?.lat && position?.lng\n                  ? position\n                  : center || defaultCenter\n              }\n            />\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            />\n            <DraggableMarker\n              form={form}\n              id={id}\n              changePos={changePos}\n              position={position}\n            />\n          </MapContainer>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Maps\n","import React from 'react'\nimport { Space, Form, Radio, Select } from 'antd'\n\nconst TypeOption = ({ option, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      {option.length < 3 ? (\n        <Radio.Group>\n          <Space direction='vertical'>\n            {option.map((o, io) => (\n              <Radio key={io} value={o.name}>\n                {o.name}\n              </Radio>\n            ))}\n          </Space>\n        </Radio.Group>\n      ) : (\n        <Select style={{ width: '100%' }}>\n          {option.map((o, io) => (\n            <Select.Option key={io} value={o.name}>\n              {o.name}\n            </Select.Option>\n          ))}\n        </Select>\n      )}\n    </Form.Item>\n  )\n}\n\nexport default TypeOption\n","import React from 'react'\nimport { Form, Select } from 'antd'\n\nconst TypeMultipleOption = ({ option, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Select mode='multiple' style={{ width: '100%' }}>\n        {option.map((o, io) => (\n          <Select.Option key={io} value={o.name}>\n            {o.name}\n          </Select.Option>\n        ))}\n      </Select>\n    </Form.Item>\n  )\n}\n\nexport default TypeMultipleOption\n","import React from 'react'\nimport { Form, DatePicker } from 'antd'\n\nconst TypeDate = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <DatePicker style={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeDate\n","import React from 'react'\nimport { Form, Cascader } from 'antd'\n\nconst TypeCascade = ({ cascade, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Cascader options={cascade} />\n    </Form.Item>\n  )\n}\n\nexport default TypeCascade\n","import React from 'react'\nimport { Form, InputNumber } from 'antd'\n\nconst TypeNumber = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <InputNumber style={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeNumber\n","import React from 'react'\nimport { Form, Input } from 'antd'\n\nconst TypeInput = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Input sytle={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeInput\n","import React from 'react'\nimport { Form } from 'antd'\nimport TextArea from 'antd/lib/input/TextArea'\n\nconst TypeText = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <TextArea row={4} />\n    </Form.Item>\n  )\n}\n\nexport default TypeText\n","import React, { useState } from 'react'\nimport { Row, Col, Card, Button, Form, Input } from 'antd'\nimport Maps from './support/Maps'\nimport 'antd/dist/antd.css'\nimport './styles.module.css'\nimport TypeOption from './fields/TypeOption'\nimport TypeMultipleOption from './fields/TypeMultipleOption'\nimport TypeDate from './fields/TypeDate'\nimport TypeCascade from './fields/TypeCascade'\nimport TypeNumber from './fields/TypeNumber'\nimport TypeInput from './fields/TypeInput'\nimport TypeText from './fields/TypeText'\n\nconst mapRules = ({ rule, type }) => {\n  if (type === 'number') {\n    return [{ ...rule, type: 'number' }]\n  }\n  return [{}]\n}\n\nconst QuestionFields = ({ rules, cascade, form, index, field }) => {\n  switch (field.type) {\n    case 'option':\n      return <TypeOption keyform={index} rules={rules} {...field} />\n    case 'multiple_option':\n      return <TypeMultipleOption keyform={index} rules={rules} {...field} />\n    case 'cascade':\n      return (\n        <TypeCascade\n          keyform={index}\n          cascade={cascade[field.option]}\n          rules={rules}\n          {...field}\n        />\n      )\n    case 'date':\n      return <TypeDate keyform={index} rules={rules} {...field} />\n    case 'number':\n      return <TypeNumber keyform={index} rules={rules} {...field} />\n    case 'text':\n      return <TypeText keyform={index} rules={rules} {...field} />\n    default:\n      return <TypeInput keyform={index} rules={rules} {...field} />\n  }\n}\n\nconst validateDependency = (dependency, value) => {\n  if (dependency?.options) {\n    return dependency.options.includes(value)\n  }\n  let valid = false\n  if (dependency?.min) {\n    valid = value >= dependency.min\n  }\n  if (dependency?.max) {\n    valid = value <= dependency.max\n  }\n  return valid\n}\n\nconst Question = ({ fields, cascade, form }) => {\n  return fields.map((field, key) => {\n    let rules = []\n    if (field?.required) {\n      rules = [\n        {\n          validator: (_, value) =>\n            value\n              ? Promise.resolve()\n              : Promise.reject(new Error(`${field.name} is required`))\n        }\n      ]\n    }\n    if (field?.rule) {\n      rules = [...rules, ...mapRules(field)]\n    }\n    const [value, setValue] = useState(null)\n    if (field?.type === 'geo') {\n      return (\n        <Col key={key}>\n          <Form.Item\n            name={field.id}\n            label={`${key + 1}. ${field.name}`}\n            rules={rules}\n            required={field?.required}\n          >\n            <Input value={value} disabled hidden />\n          </Form.Item>\n          <Maps\n            form={form}\n            setValue={setValue}\n            id={field.id}\n            center={field.center}\n          />\n        </Col>\n      )\n    }\n    if (field?.dependency) {\n      return (\n        <Form.Item\n          key={key}\n          shouldUpdate={(prevValues, currentValues) => {\n            const update = field.dependency\n              .map((x) => prevValues[x.id] !== currentValues[x.id])\n              .filter((x) => x === true)\n            return update.length\n          }}\n        >\n          {({ getFieldValue }) => {\n            const unmatches = field.dependency\n              .map((x) => validateDependency(x, getFieldValue(x.id)))\n              .filter((x) => x === false)\n            return unmatches.length ? null : (\n              <QuestionFields\n                rules={rules}\n                form={form}\n                index={key}\n                cascade={cascade}\n                field={field}\n              />\n            )\n          }}\n        </Form.Item>\n      )\n    }\n    return (\n      <QuestionFields\n        rules={rules}\n        form={form}\n        key={key}\n        index={key}\n        cascade={cascade}\n        field={field}\n      />\n    )\n  })\n}\n\nexport const Webform = ({ forms, onChange, onFinish, style }) => {\n  const [form] = Form.useForm()\n  if (!forms?.question_group) {\n    return 'Error Format'\n  }\n\n  const onSubmit = (values) => {\n    if (onFinish) {\n      onFinish(values)\n    } else {\n      console.log(values)\n    }\n  }\n\n  const onValuesChange = (fr, value, values) => {\n    const all = fr.getFieldsError().length\n    const filled = Object.keys(values)\n      .map((k) => values[k])\n      .filter((x) => x).length\n    if (onChange) {\n      onChange({\n        current: value,\n        values: values,\n        progress: (filled / all) * 100\n      })\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      layout='vertical'\n      name={forms.name}\n      scrollToFirstError='true'\n      onValuesChange={(value, values) =>\n        setTimeout(() => {\n          onValuesChange(form, value, values)\n        }, 100)\n      }\n      onFinish={onSubmit}\n      style={style}\n    >\n      {forms?.question_group.map((g, key) => {\n        return (\n          <Card key={key} title={g.name || `Section ${key + 1}`}>\n            <Question fields={g.question} cascade={forms.cascade} form={form} />\n          </Card>\n        )\n      })}\n      <Row>\n        <Col span={24}>\n          <Card>\n            <Form.Item>\n              <Button type='primary' htmlType='submit'>\n                Submit\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","defaultCenter","lat","lng","DraggableMarker","changePos","position","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","newPos","getLatLng","useMapEvents","click","e","latlng","MapRef","center","map","useMap","panTo","Maps","form","id","useState","setPosition","console","log","setFieldsValue","onChange","cname","parseFloat","marginBottom","paddingRight","width","paddingLeft","height","TypeOption","option","name","keyform","required","rules","length","o","io","TypeMultipleOption","TypeDate","TypeCascade","cascade","TypeNumber","TypeInput","TypeText","mapRules","rule","type","QuestionFields","index","field","validateDependency","dependency","value","includes","valid","min","max","Question","fields","key","validator","_","Promise","resolve","reject","Error","setValue","prevValues","currentValues","update","x","filter","getFieldValue","unmatches","Webform","forms","onFinish","style","Form","useForm","question_group","onSubmit","values","onValuesChange","fr","all","getFieldsError","filled","Object","keys","k","progress","setTimeout","g","question"],"mappings":"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"}